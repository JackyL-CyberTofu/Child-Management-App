package ca.sfu.cmpt276.be.parentapp.view;

import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.graphics.Color;
import android.os.Bundle;
import android.view.MenuItem;
import android.view.WindowManager;
import android.widget.Button;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.cardview.widget.CardView;

import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.android.material.navigation.NavigationBarView;

import ca.sfu.cmpt276.be.parentapp.R;
import ca.sfu.cmpt276.be.parentapp.controller.DataManager;

/**
 * MainActivity in the starting screen of the app with buttons leading to each feature. It also
 * implements the SaveManager to save the Json strings generated by DataManager to its own
 * Shared Preferences.
 */
public class MainActivity extends AppCompatActivity {
    public static final String PREF_SAVE_NAME = "SaveData";
    SharedPreferences saveSP;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
//        getWindow().setFlags(WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS, WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS);
//        getWindow().setStatusBarColor(Color.TRANSPARENT);

        setContentView(R.layout.activity_main_2);

        setUpSaving();
        loadData();
        setUpChildButton();
        setUpTimeoutButton();
        setUpTaskButton();
        setUpHelpButton();

        BottomNavigationView bottomNavigationView = findViewById(R.id.bottom_navigation);
        bottomNavigationView.setSelectedItemId(R.id.item_home);
        bottomNavigationView.setOnItemSelectedListener(item -> {
            bottomNavigationView.postDelayed(() -> {
                int id = item.getItemId();
                if (id == R.id.item_tasks){
                    startActivity(new Intent(getApplicationContext(), TaskListActivity.class));
                    overridePendingTransition(0, 0);
                } else if (id == R.id.item_timeout){
                    startActivity(new Intent(getApplicationContext(), TimeoutActivity.class));
                    overridePendingTransition(0, 0);
                } else if (id == R.id.item_child){
                    startActivity(new Intent(getApplicationContext(), ChildListActivity.class));
                    overridePendingTransition(0, 0);
                } else if (id == R.id.item_coinflip){
                    startActivity(new Intent(getApplicationContext(), CoinFlipActivity.class));
                    overridePendingTransition(0, 0);
                }
            },0);
            return true;
        });
    }

    private void setUpHelpButton() {
        CardView button_help = findViewById(R.id.button_help);
        button_help.setOnClickListener(view -> {
            Intent helpActivity = HelpActivity.makeIntent(MainActivity.this);
            startActivity(helpActivity);
        });
    }

    private void setUpTaskButton() {
        CardView toTasks = findViewById(R.id.button_task_list);
        toTasks.setOnClickListener(view -> {
            Intent tasksActivity = new Intent(getApplicationContext(), TaskListActivity.class);
            startActivity(tasksActivity);
        });
    }

    private void setUpTimeoutButton() {
        CardView button_timeout = findViewById(R.id.button_timeout);
        button_timeout.setOnClickListener(view -> {
            Intent timeoutActivity = TimeoutActivity.makeIntent(MainActivity.this);
            startActivity(timeoutActivity);
        });
    }

    private void setUpChildButton() {
        CardView toChildren = findViewById(R.id.button_children);
        toChildren.setOnClickListener(v -> {
            Intent childActivity = ChildListActivity.makeIntent(MainActivity.this);
            startActivity(childActivity);
        });

        CardView button2 = findViewById(R.id.button_coin_flip);

        button2.setOnClickListener(v -> {
            Intent intent = new Intent(getApplicationContext(), CoinFlipActivity.class);
            startActivity(intent);
        });
    }

    private void setUpSaving() {
        DataManager dataManager = DataManager.getInstance();
        dataManager.setSaveOption(new DataManager.SaveManager() {
            @Override
            public String load(String saveName) {
                saveSP = getApplicationContext().getSharedPreferences(PREF_SAVE_NAME, Context.MODE_PRIVATE);
                return saveSP.getString(saveName, "");
            }

            @Override
            public void save(String saveName, String saveJson) {
                saveSP = getApplicationContext().getSharedPreferences(PREF_SAVE_NAME, Context.MODE_PRIVATE);
                SharedPreferences.Editor editor = saveSP.edit();
                editor.putString(saveName, saveJson);
                editor.apply();
            }
        });
    }

    private void loadData() {
        DataManager.getInstance().deserializeData();
    }

    @Override
    public void onResume() {

        super.onResume();
        BottomNavigationView bottomNavigationView = findViewById(R.id.bottom_navigation);
        bottomNavigationView.setSelectedItemId(R.id.item_home);
    }
}